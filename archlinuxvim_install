#!/bin/bash

if [ -z $1 ]; 
	then echo -e "Usage: archlinuxvim_install /dev/targetdevice \n\nFor example:\n# archlinuxvim_install /dev/sdc\n"; 
	exit -1;
fi

device=$1
if [ -b $device ]; 
	then echo -e; 
	else echo 'Target device not found!';
	exit -2;
fi;

echo 'Target device is '$device
if [[ $device = '/dev/mmcblk'* ]]
	then device=$device'p'
fi
if [[ $device = '/dev/loop'* ]]
	then device=$device'p'
fi
echo $device

BOOT=$device'1'
ROOT=$device'2'
echo 'ROOT = '$ROOT
echo 'BOOT = '$BOOT

echo -en '\nProceed?[Y/n]: '
read -n1 ans
echo -e '\n'

if [ ${ans,,} != 'y' ] >/dev/null 2>&1; then exit 1; fi

echo 'Download ArchLinux core filesystem...'
wget -c http://os.archlinuxarm.org/os/ArchLinuxARM-odroid-n2-latest.tar.gz

dd if=/dev/zero of=$device bs=512 count=1 # Remove MBR

(
echo o
echo n
echo p
echo 1
echo 2048
echo +256M
echo n
echo n
echo p
echo 2
echo
echo
echo n
echo w
) | fdisk $device

echo 'Creating boot partition from image...'
xzcat boot.img.xz | dd of=$BOOT

TEMPO=/tmp/archlinuxvim
echo -e "\nTemporarily dir for mount your device partitions is $TEMPO"
ROOTDIR=$TEMPO/root # Temporary dir for mount
echo "ROOTDIR is "$ROOTDIR
mkdir -p $ROOTDIR || exit -3

mount $ROOT $ROOTDIR || exit -4
echo 'Unpackaging rootfs to target...'
tar -xvf ArchLinuxARM-odroid-n2-latest.tar.gz -C $ROOTDIR >/dev/null || exit -5
rm -rf $ROOTDIR/boot/*

echo 'Unpackaging kernel modules to target...'
rm -rf $ROOTDIR/lib/modules/*
tar -xvf modules.5.12.0.tar.xz -C $ROOTDIR >/dev/null 

BOOTDIR=$TEMPO/boot # Temporary dir for mount
mkdir -p $BOOTDIR
mount $BOOT $BOOTDIR 

ROOT_UUID=$(ls -l /dev/disk/by-uuid/ |grep $(echo $ROOT | cut -d / -f 3) | cut -d ' ' -f 10)
BOOT_UUID=$(ls -l /dev/disk/by-uuid/ |grep $(echo $BOOT | cut -d / -f 3) | cut -d ' ' -f 10)
echo 'UUID of ROOT device is '$ROOT_UUID
echo 'UUID of BOOT device is '$BOOT_UUID

echo "Generate /boot/env.txt for right root device variable..."
eval "cat <<EOF $(<boot/env.txt_template) EOF" 2> /dev/null > $BOOTDIR/env.txt
echo "Generate right /etc/fstab for happy booting ArchLinux :)"
eval "cat <<EOF $(<etc/fstab_template) EOF" 2> /dev/null > $ROOTDIR/etc/fstab

umount $ROOTDIR 
umount $BOOTDIR 

rm -rf $TEMPO



